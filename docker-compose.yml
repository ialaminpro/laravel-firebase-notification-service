version: '3.8'

services:
    app:
        build:
            context: .
        container_name: app
        working_dir: /var/www
        volumes:
            - .:/var/www
        networks:
            - app_network
        depends_on:
            - db
            - redis
    web:
        image: nginx:alpine
        container_name: web
        restart: unless-stopped
        ports:
            - "${APP_PORT}:80"
        volumes:
            - .:/var/www
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app_network
        depends_on:
            - app
    db:
        image: mysql:8.0
        container_name: db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: "${DB_DATABASE}"           # Use database name from .env
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"      # Use password from .env
            MYSQL_USER: "${DB_USERNAME}"               # Use username from .env
            MYSQL_PASSWORD: "${DB_PASSWORD}"           # Use password from .env
        volumes:
            - dbdata:/var/lib/mysql
        ports:
            - "33065:${DB_PORT}"
        networks:
            - app_network
        healthcheck:
            test: [ "CMD", "mysqladmin", "ping", "-h", "db" ]
            interval: 10s
            timeout: 5s
            retries: 5
    redis:
        image: redis:alpine
        container_name: redis
        ports:
            - "6385:6379"
        networks:
            - app_network
networks:
    app_network:
        driver: bridge
volumes:
    dbdata:
